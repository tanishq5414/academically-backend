generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name  String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role UserRole @default(USER)
}

model Course {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  instructorName String
  status CourseStatus @default(DRAFT)
  category CourseCategory @default(BEGINNER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  enrollments CourseEnrollment[]
}

model Video {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  url String
  courseId String
  duration Int
  uploadedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CourseProgress {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  courseId String @db.ObjectId
  videoId String @db.ObjectId
  progress Int
  courseProgressStatus CourseProgressStatus @default(IN_PROGRESS)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, courseId, videoId], name: "userId_courseId_videoId")
}

model CourseEnrollment {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  courseId String @db.ObjectId
  course Course @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, courseId], name: "userId_courseId")
}

enum CourseProgressStatus {
  IN_PROGRESS
  COMPLETED
}

enum CourseCategory {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum UserRole {
  USER
  ADMIN
}

enum CourseStatus {
  DRAFT
  PUBLISHED
}

enum VideoStatus {
  DRAFT
  PUBLISHED
}
